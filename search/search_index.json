{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Mathematical Formulation of Projectile Motion 1.1 Governing Equations of Motion Using Newton\u2019s Second Law , considering only gravitational force (neglecting air resistance): \\[ F = ma = -mg \\hat{y} \\] This results in two differential equations: Horizontal motion : [ \\frac{d^2x}{dt^2} = 0 ] Vertical motion : [ \\frac{d^2y}{dt^2} = -g ] 2. Solving the Equations Given initial conditions: Initial position : \\((x_0, y_0) = (0, y_0)\\) Initial velocity : \\( v_0 \\) at an angle \\( \\theta \\) Velocity components : [ v_{0x} = v_0 \\cos\\theta, \\quad v_{0y} = v_0 \\sin\\theta ] The general solutions are: \\[ x(t) = v_0 \\cos\\theta \\cdot t \\] \\[ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] 3. Time of Flight The time of flight is found by solving \\( y(t) = 0 \\) (when the projectile returns to its initial height \\( y_0 \\) ). For \\( y_0 = 0 \\) : \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\( t \\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\] For \\( y_0 \\neq 0 \\) , solving the quadratic equation \\( y(t) = 0 \\) : \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2g y_0}}{g} \\] 4. Range Calculation The horizontal range \\( R \\) is: For \\( y_0 = 0 \\) : \\[ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} = \\frac{v_0^2 \\sin 2\\theta}{g} \\] For \\( y_0 \\neq 0 \\) : \\[ R = v_0 \\cos\\theta \\cdot t \\] where \\( t \\) is given by the quadratic formula above. 5. Maximum Height The maximum height occurs when vertical velocity becomes zero ( \\( v_y = 0 \\) ): \\[ H = \\frac{v_0^2 \\sin^2\\theta}{2g} \\] For \\( y_0 \\neq 0 \\) : \\[ H = y_0 + \\frac{v_0^2 \\sin^2\\theta}{2g} \\] 6. Optimal Launch Angle The launch angle that maximizes the range for \\( y_0 = 0 \\) is: \\[ \\theta_{\\text{optimal}} = 45^\\circ \\] For \\( y_0 > 0 \\) , the optimal angle is slightly less than \\( 45^\\circ \\) , given by: \\[ \\theta_{\\text{optimal}} \\approx 45^\\circ - \\frac{y_0}{v_0^2} \\cdot k \\] where \\( k \\) is a proportionality constant. These equations provide a complete theoretical framework for projectile motion analysis. Would you like further modifications or additional explanations? 1.2. Theoretical Analysis of Range The range \\( R \\) of a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) is given by: \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] where: - \\( v_0 \\) is the initial velocity, - \\( g \\) is the gravitational acceleration, - \\( \\theta \\) is the angle of projection. Key Observations: Dependence on \\( \\theta \\) : The range is maximized when \\( \\sin 2\\theta \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) . The function is symmetric around \\( 45^\\circ \\) , meaning \\( R(\\theta) = R(90^\\circ - \\theta) \\) . Beyond \\( 45^\\circ \\) , increasing \\( \\theta \\) decreases the horizontal component of velocity, reducing \\( R \\) . Effect of Initial Velocity \\( v_0 \\) : Since \\( R \\propto v_0^2 \\) , doubling \\( v_0 \\) quadruples the range. A higher velocity results in a greater overall displacement. Effect of Gravity \\( g \\) : Since \\( R \\propto \\frac{1}{g} \\) , an increase in gravitational acceleration decreases the range. On planets with lower gravity (e.g., Moon, Mars), projectiles travel farther for the same \\( v_0 \\) . Effect of Initial Height \\( y_0 \\) : If the projectile is launched from a height \\( y_0 > 0 \\) , range is extended due to a longer time of flight. The range equation is modified to account for this additional height: \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2gy_0}}{g} \\] \\[ R = v_0 \\cos\\theta \\cdot t \\] 3. Observations from Graphs Effect of Velocity: The peak of the curve shifts upward as \\( v_0 \\) increases, confirming \\( R \\propto v_0^2 \\) . Effect of Height: When \\( y_0 \\) increases , the range extends beyond \\( \\theta = 45^\\circ \\) . The maximum range shifts to a slightly lower angle (e.g., \\( 40^\\circ \\) instead of \\( 45^\\circ \\) ). 4. Limitations & Extensions Limitations: Ignores air resistance: In reality, air drag reduces range. No wind effects: Wind can increase/decrease range depending on direction. Flat terrain assumption: Uneven ground alters projectile trajectory. Extensions: Air Resistance Model: [ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 ] Implementing numerical methods to model drag forces . Wind Influence: Adding lateral forces for real-world accuracy. 5. Conclusion The range follows a parabolic trend with respect to \\( \\theta \\) , maximizing at \\( 45^\\circ \\) . Increasing \\( v_0 \\) quadratically increases range. Higher launch height shifts the optimal angle below \\( 45^\\circ \\) . Gravity acts as an inverse factor , reducing the range when increased. This provides a solid foundation for studying real-world projectile motion, from sports science (basketball, soccer) to aerospace applications (missile trajectory planning). 1.3 # Investigating the Range as a Function of the Angle of Projection Motivation Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket. Theoretical Foundation Derivation of Governing Equations We begin with Newton's second law of motion, considering only gravity as the acting force (neglecting air resistance): \\[ F = ma = -mg\\hat{y} \\] This gives us two differential equations: - Horizontal motion (x-axis): [ d^2x/dt^2 = 0 ] - Vertical motion (y-axis): [ d^2y/dt^2 = -g ] Solving these with initial conditions: - Initial position: \\( (0, y_0) \\) - Initial velocity: \\( v_0 \\) at angle \\( \\theta \\) - Velocity components: \\( v_{0x} = v_0 \\cos\\theta \\) , \\( v_{0y} = v_0 \\sin\\theta \\) Equations of Motion: - [ x(t) = v_0 \\cos\\theta \\cdot t ] - [ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ] Range Calculation The range ( \\( R \\) ) is the horizontal distance when the projectile returns to launch height ( \\( y=y_0 \\) ). For \\( y_0 = 0 \\) : [ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ] Solving for time: [ t = \\frac{2v_0 \\sin\\theta}{g} ] Thus, the range is: [ R = v_0 \\cos\\theta \\cdot \\frac{2v_0 \\sin\\theta}{g} = \\frac{v_0^2 \\sin 2\\theta}{g} ] For \\( y_0 \\neq 0 \\) : Using the quadratic equation to find time: [ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2 g y_0}}{g} ] Then the range: [ R = v_0 \\cos\\theta \\cdot t ] Practical Applications 1. Sports Science: Soccer and basketball: Finding optimal angles for kicks or shots. Golf: Accounting for lift and spin effects on the projectile. 2. Military Applications: Artillery calculations: Determining best angles for projectile range. Rocket launches: Adjusting for gravity and atmospheric drag. 3. Aerospace and Space Exploration: Spacecraft landings: Adjusting for different planetary gravities. Satellite deployments: Managing launch angles and velocities. Limitations and Extensions Limitations: Ignores air resistance (significant for fast-moving objects). No wind effects (crosswind alters trajectory). Assumes level ground (terrain variations affect range). Extensions: Modeling air resistance: [ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 ] Wind effects: Lateral forces modifying trajectory. Numerical simulations: Using differential equations for real-world modeling. 1.4 Projectile motion is governed by Newton's second law: \\[ F = ma \\] For a projectile under gravity, the equations of motion are: Equations of Motion: Horizontal Motion: [ x(t) = v_0 \\cos\\theta \\cdot t ] Vertical Motion: [ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ] Time of Flight: The time \\( t \\) when the projectile returns to the same height \\( y_0 \\) (assuming \\( y_0 = 0 \\) ) is obtained by solving: \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\] Range Formula: The horizontal range \\( R \\) is given by: \\[ R = v_0 \\cos\\theta \\cdot t \\] Substituting \\( t = \\frac{2 v_0 \\sin\\theta}{g} \\) : \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] If the projectile is launched from an initial height \\( y_0 \\neq 0 \\) , the range is: \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2 g y_0}}{g} \\] \\[ R = v_0 \\cos\\theta \\cdot t \\]","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#mathematical-formulation-of-projectile-motion","text":"","title":"Mathematical Formulation of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-governing-equations-of-motion","text":"Using Newton\u2019s Second Law , considering only gravitational force (neglecting air resistance): \\[ F = ma = -mg \\hat{y} \\] This results in two differential equations: Horizontal motion : [ \\frac{d^2x}{dt^2} = 0 ] Vertical motion : [ \\frac{d^2y}{dt^2} = -g ]","title":"1.1 Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-solving-the-equations","text":"Given initial conditions: Initial position : \\((x_0, y_0) = (0, y_0)\\) Initial velocity : \\( v_0 \\) at an angle \\( \\theta \\) Velocity components : [ v_{0x} = v_0 \\cos\\theta, \\quad v_{0y} = v_0 \\sin\\theta ] The general solutions are: \\[ x(t) = v_0 \\cos\\theta \\cdot t \\] \\[ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\]","title":"2. Solving the Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-time-of-flight","text":"The time of flight is found by solving \\( y(t) = 0 \\) (when the projectile returns to its initial height \\( y_0 \\) ). For \\( y_0 = 0 \\) : \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\( t \\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\] For \\( y_0 \\neq 0 \\) , solving the quadratic equation \\( y(t) = 0 \\) : \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2g y_0}}{g} \\]","title":"3. Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-range-calculation","text":"The horizontal range \\( R \\) is: For \\( y_0 = 0 \\) : \\[ R = v_0 \\cos\\theta \\cdot \\frac{2 v_0 \\sin\\theta}{g} = \\frac{v_0^2 \\sin 2\\theta}{g} \\] For \\( y_0 \\neq 0 \\) : \\[ R = v_0 \\cos\\theta \\cdot t \\] where \\( t \\) is given by the quadratic formula above.","title":"4. Range Calculation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-maximum-height","text":"The maximum height occurs when vertical velocity becomes zero ( \\( v_y = 0 \\) ): \\[ H = \\frac{v_0^2 \\sin^2\\theta}{2g} \\] For \\( y_0 \\neq 0 \\) : \\[ H = y_0 + \\frac{v_0^2 \\sin^2\\theta}{2g} \\]","title":"5. Maximum Height"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-optimal-launch-angle","text":"The launch angle that maximizes the range for \\( y_0 = 0 \\) is: \\[ \\theta_{\\text{optimal}} = 45^\\circ \\] For \\( y_0 > 0 \\) , the optimal angle is slightly less than \\( 45^\\circ \\) , given by: \\[ \\theta_{\\text{optimal}} \\approx 45^\\circ - \\frac{y_0}{v_0^2} \\cdot k \\] where \\( k \\) is a proportionality constant. These equations provide a complete theoretical framework for projectile motion analysis. Would you like further modifications or additional explanations?","title":"6. Optimal Launch Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-theoretical-analysis-of-range","text":"The range \\( R \\) of a projectile launched at an angle \\( \\theta \\) with initial velocity \\( v_0 \\) is given by: \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] where: - \\( v_0 \\) is the initial velocity, - \\( g \\) is the gravitational acceleration, - \\( \\theta \\) is the angle of projection.","title":"1.2. Theoretical Analysis of Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#key-observations","text":"Dependence on \\( \\theta \\) : The range is maximized when \\( \\sin 2\\theta \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) . The function is symmetric around \\( 45^\\circ \\) , meaning \\( R(\\theta) = R(90^\\circ - \\theta) \\) . Beyond \\( 45^\\circ \\) , increasing \\( \\theta \\) decreases the horizontal component of velocity, reducing \\( R \\) . Effect of Initial Velocity \\( v_0 \\) : Since \\( R \\propto v_0^2 \\) , doubling \\( v_0 \\) quadruples the range. A higher velocity results in a greater overall displacement. Effect of Gravity \\( g \\) : Since \\( R \\propto \\frac{1}{g} \\) , an increase in gravitational acceleration decreases the range. On planets with lower gravity (e.g., Moon, Mars), projectiles travel farther for the same \\( v_0 \\) . Effect of Initial Height \\( y_0 \\) : If the projectile is launched from a height \\( y_0 > 0 \\) , range is extended due to a longer time of flight. The range equation is modified to account for this additional height: \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2gy_0}}{g} \\] \\[ R = v_0 \\cos\\theta \\cdot t \\]","title":"Key Observations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-observations-from-graphs","text":"Effect of Velocity: The peak of the curve shifts upward as \\( v_0 \\) increases, confirming \\( R \\propto v_0^2 \\) . Effect of Height: When \\( y_0 \\) increases , the range extends beyond \\( \\theta = 45^\\circ \\) . The maximum range shifts to a slightly lower angle (e.g., \\( 40^\\circ \\) instead of \\( 45^\\circ \\) ).","title":"3. Observations from Graphs"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-limitations-extensions","text":"","title":"4. Limitations &amp; Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations","text":"Ignores air resistance: In reality, air drag reduces range. No wind effects: Wind can increase/decrease range depending on direction. Flat terrain assumption: Uneven ground alters projectile trajectory.","title":"Limitations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#extensions","text":"Air Resistance Model: [ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 ] Implementing numerical methods to model drag forces . Wind Influence: Adding lateral forces for real-world accuracy.","title":"Extensions:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-conclusion","text":"The range follows a parabolic trend with respect to \\( \\theta \\) , maximizing at \\( 45^\\circ \\) . Increasing \\( v_0 \\) quadratically increases range. Higher launch height shifts the optimal angle below \\( 45^\\circ \\) . Gravity acts as an inverse factor , reducing the range when increased. This provides a solid foundation for studying real-world projectile motion, from sports science (basketball, soccer) to aerospace applications (missile trajectory planning). 1.3 # Investigating the Range as a Function of the Angle of Projection","title":"5. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#derivation-of-governing-equations","text":"We begin with Newton's second law of motion, considering only gravity as the acting force (neglecting air resistance): \\[ F = ma = -mg\\hat{y} \\] This gives us two differential equations: - Horizontal motion (x-axis): [ d^2x/dt^2 = 0 ] - Vertical motion (y-axis): [ d^2y/dt^2 = -g ] Solving these with initial conditions: - Initial position: \\( (0, y_0) \\) - Initial velocity: \\( v_0 \\) at angle \\( \\theta \\) - Velocity components: \\( v_{0x} = v_0 \\cos\\theta \\) , \\( v_{0y} = v_0 \\sin\\theta \\) Equations of Motion: - [ x(t) = v_0 \\cos\\theta \\cdot t ] - [ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ]","title":"Derivation of Governing Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-calculation","text":"The range ( \\( R \\) ) is the horizontal distance when the projectile returns to launch height ( \\( y=y_0 \\) ). For \\( y_0 = 0 \\) : [ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ] Solving for time: [ t = \\frac{2v_0 \\sin\\theta}{g} ] Thus, the range is: [ R = v_0 \\cos\\theta \\cdot \\frac{2v_0 \\sin\\theta}{g} = \\frac{v_0^2 \\sin 2\\theta}{g} ] For \\( y_0 \\neq 0 \\) : Using the quadratic equation to find time: [ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2 g y_0}}{g} ] Then the range: [ R = v_0 \\cos\\theta \\cdot t ]","title":"Range Calculation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-sports-science","text":"Soccer and basketball: Finding optimal angles for kicks or shots. Golf: Accounting for lift and spin effects on the projectile.","title":"1. Sports Science:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-military-applications","text":"Artillery calculations: Determining best angles for projectile range. Rocket launches: Adjusting for gravity and atmospheric drag.","title":"2. Military Applications:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-aerospace-and-space-exploration","text":"Spacecraft landings: Adjusting for different planetary gravities. Satellite deployments: Managing launch angles and velocities.","title":"3. Aerospace and Space Exploration:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations-and-extensions","text":"","title":"Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations_1","text":"Ignores air resistance (significant for fast-moving objects). No wind effects (crosswind alters trajectory). Assumes level ground (terrain variations affect range).","title":"Limitations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#extensions_1","text":"Modeling air resistance: [ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 ] Wind effects: Lateral forces modifying trajectory. Numerical simulations: Using differential equations for real-world modeling. 1.4 Projectile motion is governed by Newton's second law: \\[ F = ma \\] For a projectile under gravity, the equations of motion are:","title":"Extensions:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"Horizontal Motion: [ x(t) = v_0 \\cos\\theta \\cdot t ] Vertical Motion: [ y(t) = y_0 + v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 ]","title":"Equations of Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight","text":"The time \\( t \\) when the projectile returns to the same height \\( y_0 \\) (assuming \\( y_0 = 0 \\) ) is obtained by solving: \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\]","title":"Time of Flight:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-formula","text":"The horizontal range \\( R \\) is given by: \\[ R = v_0 \\cos\\theta \\cdot t \\] Substituting \\( t = \\frac{2 v_0 \\sin\\theta}{g} \\) : \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] If the projectile is launched from an initial height \\( y_0 \\neq 0 \\) , the range is: \\[ t = \\frac{v_0 \\sin\\theta + \\sqrt{(v_0 \\sin\\theta)^2 + 2 g y_0}}{g} \\] \\[ R = v_0 \\cos\\theta \\cdot t \\]","title":"Range Formula:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 1.1 Task 1: Theoretical Foundation \ud83d\udd39 Differential Equation (Forced Damped Pendulum): \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) For small angles: sin \u2061 ( \ud835\udf03 ) \u2248 \ud835\udf03 \u21d2 \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) sin(\u03b8)\u2248\u03b8\u21d2 dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b \u03b8=Acos(\u03c9t) 2.1.2 2.1.2 \u2705 Task 2: Analysis of Dynamics \ud83d\udd39 Nonlinear Differential Equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2s \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) This is the full nonlinear form (no small-angle approximation). 2.1.3 Task 3: Practical Applications (with Mathematical Formulation & Code) \ud83d\udd39 Same Governing Equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) We'll simulate different real-world scenarios by changing parameters: 2.1.4 \u2705 Task 4: Dynamics \u2013 Phase Portrait & Poincar\u00e9 Section Governing Equation (Nonlinear Form): \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) We use the following parameters and definitions to simulate the dynamics.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"1.1 Task 1: Theoretical Foundation \ud83d\udd39 Differential Equation (Forced Damped Pendulum): \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) For small angles: sin \u2061 ( \ud835\udf03 ) \u2248 \ud835\udf03 \u21d2 \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 \ud835\udf03 = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) sin(\u03b8)\u2248\u03b8\u21d2 dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b \u03b8=Acos(\u03c9t) 2.1.2 2.1.2 \u2705 Task 2: Analysis of Dynamics \ud83d\udd39 Nonlinear Differential Equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2s \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) This is the full nonlinear form (no small-angle approximation). 2.1.3 Task 3: Practical Applications (with Mathematical Formulation & Code) \ud83d\udd39 Same Governing Equation: \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) We'll simulate different real-world scenarios by changing parameters: 2.1.4 \u2705 Task 4: Dynamics \u2013 Phase Portrait & Poincar\u00e9 Section Governing Equation (Nonlinear Form): \ud835\udc51 2 \ud835\udf03 \ud835\udc51 \ud835\udc61 2 + \ud835\udefd \ud835\udc51 \ud835\udf03 \ud835\udc51 \ud835\udc61 + \ud835\udf14 0 2 sin \u2061 ( \ud835\udf03 ) = \ud835\udc34 cos \u2061 ( \ud835\udf14 \ud835\udc61 ) dt 2 d 2 \u03b8 \u200b +\u03b2 dt d\u03b8 \u200b +\u03c9 0 2 \u200b sin(\u03b8)=Acos(\u03c9t) We use the following parameters and definitions to simulate the dynamics.","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 1.1 \ud83d\udcd0 Mathematical Derivation For a circular orbit: Gravitational force = Centripetal force \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f r 2 GMm \u200b = r mv 2 \u200b Solve for velocity: \ud835\udc63 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 2 = r GM \u200b Orbital period: \ud835\udc47 2 \ud835\udf0b \ud835\udc5f \ud835\udc63 \u21d2 \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 2 \ud835\udc63 2 T= v 2\u03c0r \u200b \u21d2T 2 = v 2 4\u03c0 2 r 2 \u200b Plug in \ud835\udc63 2 v 2 : \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b \u2705 Final formula: \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 1.2 Task 2: Implications of Kepler\u2019s Law in Astronomy \ud83d\udcd0 Kepler's Third Law: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b This law connects the orbital period (T) and the orbital radius (r) of celestial bodies and helps in understanding planetary motion and distances. empty 1.3 Kepler's Third Law: The relationship between the orbital period and the orbital radius is given by: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b Where: \ud835\udc47 T is the orbital period (in seconds), \ud835\udc5f r is the orbital radius (in meters), \ud835\udc3a G is the gravitational constant, \ud835\udc40 M is the mass of Earth. Known Values: Orbital radius of the Moon: \ud835\udc5f = 3.844 \u00d7 10 8 \u2009 m r=3.844\u00d710 8 m Orbital period of the Moon (actual): \ud835\udc47 = 27.3 \u2009 days T=27.3days Convert this into seconds: \ud835\udc47 = 27.3 \u00d7 24 \u00d7 3600 \u2009 seconds T=27.3\u00d724\u00d73600seconds import numpy as np Constants G = 6.67430e-11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972e24 # Mass of Earth (kg) Function to calculate T\u00b2 from Kepler's Law def kepler_law(radius): # T^2 = (4 * pi^2 * r^3) / (G * M) T_squared = (4 * np.pi 2 * radius 3) / (G * M) return T_squared Orbital radius of the Moon (in meters) r_moon = 3.844e8 # in meters Actual orbital period of the Moon (in seconds) T_moon_actual = 27.3 * 24 * 3600 # 27.3 days converted to seconds Calculate T^2 using Kepler's law for the Moon T_squared_calculated = kepler_law(r_moon) Calculate the calculated orbital period (T) T_moon_calculated = np.sqrt(T_squared_calculated) Print the results print(f\"Calculated T\u00b2: {T_squared_calculated:.2e} s\u00b2\") print(f\"Calculated T: {T_moon_calculated:.2e} seconds\") print(f\"Actual T: {T_moon_actual:.2e} seconds\") print(f\"Calculated T (in days): {T_moon_calculated / 86400:.2f} days\") print(f\"Actual T (in days): {T_moon_actual / 86400:.2f} days\") result Calculated T\u00b2: 5.63e+12 s\u00b2 Calculated T: 2.37e+06 seconds Actual T: 2.36e+06 seconds Calculated T (in days): 27.30 days Actual T (in days): 27.30 days 1.4 Task 4: Implement a Computational Model to Simulate Circular Orbits and Verify Kepler's Third Law Objective: Simulate several circular orbits with different orbital radii, compute the corresponding orbital periods, and verify Kepler\u2019s Third Law: \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 Formula Used Kepler\u2019s Third Law for circular orbits: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b Where: \ud835\udc47 T is the orbital period (in seconds), \ud835\udc5f r is the orbital radius (in meters), \ud835\udc3a G is the gravitational constant, \ud835\udc40 M is the mass of the central body (Earth, in this case).","title":"Problem 1 1.1 \ud83d\udcd0 Mathematical Derivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1-11-mathematical-derivation","text":"For a circular orbit: Gravitational force = Centripetal force \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f r 2 GMm \u200b = r mv 2 \u200b Solve for velocity: \ud835\udc63 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 2 = r GM \u200b Orbital period:","title":"Problem 1 1.1 \ud83d\udcd0 Mathematical Derivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#t","text":"2 \ud835\udf0b \ud835\udc5f \ud835\udc63 \u21d2 \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 2 \ud835\udc63 2 T= v 2\u03c0r \u200b \u21d2T 2 = v 2 4\u03c0 2 r 2 \u200b Plug in \ud835\udc63 2 v 2 : \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b \u2705 Final formula: \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 1.2 Task 2: Implications of Kepler\u2019s Law in Astronomy \ud83d\udcd0 Kepler's Third Law: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b This law connects the orbital period (T) and the orbital radius (r) of celestial bodies and helps in understanding planetary motion and distances. empty 1.3 Kepler's Third Law: The relationship between the orbital period and the orbital radius is given by: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b Where: \ud835\udc47 T is the orbital period (in seconds), \ud835\udc5f r is the orbital radius (in meters), \ud835\udc3a G is the gravitational constant, \ud835\udc40 M is the mass of Earth. Known Values: Orbital radius of the Moon: \ud835\udc5f = 3.844 \u00d7 10 8 \u2009 m r=3.844\u00d710 8 m Orbital period of the Moon (actual): \ud835\udc47 = 27.3 \u2009 days T=27.3days Convert this into seconds: \ud835\udc47 = 27.3 \u00d7 24 \u00d7 3600 \u2009 seconds T=27.3\u00d724\u00d73600seconds import numpy as np","title":"\ud835\udc47"},{"location":"1%20Physics/2%20Gravity/Problem_1/#constants","text":"G = 6.67430e-11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972e24 # Mass of Earth (kg)","title":"Constants"},{"location":"1%20Physics/2%20Gravity/Problem_1/#function-to-calculate-t2-from-keplers-law","text":"def kepler_law(radius): # T^2 = (4 * pi^2 * r^3) / (G * M) T_squared = (4 * np.pi 2 * radius 3) / (G * M) return T_squared","title":"Function to calculate T\u00b2 from Kepler's Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-radius-of-the-moon-in-meters","text":"r_moon = 3.844e8 # in meters","title":"Orbital radius of the Moon (in meters)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#actual-orbital-period-of-the-moon-in-seconds","text":"T_moon_actual = 27.3 * 24 * 3600 # 27.3 days converted to seconds","title":"Actual orbital period of the Moon (in seconds)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#calculate-t2-using-keplers-law-for-the-moon","text":"T_squared_calculated = kepler_law(r_moon)","title":"Calculate T^2 using Kepler's law for the Moon"},{"location":"1%20Physics/2%20Gravity/Problem_1/#calculate-the-calculated-orbital-period-t","text":"T_moon_calculated = np.sqrt(T_squared_calculated)","title":"Calculate the calculated orbital period (T)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#print-the-results","text":"print(f\"Calculated T\u00b2: {T_squared_calculated:.2e} s\u00b2\") print(f\"Calculated T: {T_moon_calculated:.2e} seconds\") print(f\"Actual T: {T_moon_actual:.2e} seconds\") print(f\"Calculated T (in days): {T_moon_calculated / 86400:.2f} days\") print(f\"Actual T (in days): {T_moon_actual / 86400:.2f} days\") result Calculated T\u00b2: 5.63e+12 s\u00b2 Calculated T: 2.37e+06 seconds Actual T: 2.36e+06 seconds Calculated T (in days): 27.30 days Actual T (in days): 27.30 days 1.4 Task 4: Implement a Computational Model to Simulate Circular Orbits and Verify Kepler's Third Law Objective: Simulate several circular orbits with different orbital radii, compute the corresponding orbital periods, and verify Kepler\u2019s Third Law: \ud835\udc47 2 \u221d \ud835\udc5f 3 T 2 \u221dr 3 Formula Used Kepler\u2019s Third Law for circular orbits: \ud835\udc47 2 = 4 \ud835\udf0b 2 \ud835\udc5f 3 \ud835\udc3a \ud835\udc40 T 2 = GM 4\u03c0 2 r 3 \u200b Where: \ud835\udc47 T is the orbital period (in seconds), \ud835\udc5f r is the orbital radius (in meters), \ud835\udc3a G is the gravitational constant, \ud835\udc40 M is the mass of the central body (Earth, in this case).","title":"Print the results"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 gravity 2.1.1 Problem 2 \u2013 Task 1: Define the First, Second, and Third Cosmic Velocities \ud83d\udccc Definitions and Physical Meaning First Cosmic Velocity ( \ud835\udc63 1 v 1 \u200b ) \u2014 Orbital Velocity The minimum horizontal speed needed for an object to enter stable circular orbit near the surface of a planet (without propulsion). \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 1 \u200b = r GM \u200b \u200b Second Cosmic Velocity ( \ud835\udc63 2 v 2 \u200b ) \u2014 Escape Velocity The minimum speed required to break free from a planet\u2019s gravitational field without further propulsion. \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f v 2 \u200b = r 2GM \u200b \u200b Third Cosmic Velocity ( \ud835\udc63 3 v 3 \u200b ) \u2014 Interstellar Escape Velocity The minimum speed needed to escape the gravitational pull of the Sun from Earth\u2019s orbit (i.e., to leave the solar system). \ud835\udc63 3 = \ud835\udc63 Earth orbit 2 + \ud835\udc63 2 2 v 3 \u200b = v Earth orbit 2 \u200b +v 2 2 \u200b \u200b Where: \ud835\udc63 Earth orbit \u2248 29.78 \u2009 km/s v Earth orbit \u200b \u224829.78km/s (orbital velocity of Earth around Sun), \ud835\udc63 2 \u2248 11.2 \u2009 km/s v 2 \u200b \u224811.2km/s (escape velocity from E code import numpy as np Gravitational constant G = 6.67430e-11 # m^3 kg^-1 s^-2 Define planets with mass (kg) and radius (m) planets = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6}, \"Mars\": {\"mass\": 6.417e23, \"radius\": 3.390e6}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7} } Function to compute v1 and v2 def compute_cosmic_velocities(mass, radius): v1 = np.sqrt(G * mass / radius) # First cosmic velocity v2 = np.sqrt(2 * G * mass / radius) # Second cosmic velocity return v1, v2 Calculate and print for planet, data in planets.items(): v1, v2 = compute_cosmic_velocities(data[\"mass\"], data[\"radius\"]) print(f\"{planet}:\\n First Cosmic Velocity (v1): {v1/1000:.2f} km/s\\n Second Cosmic Velocity (v2): {v2/1000:.2f} km/s\\n\") output Earth: First Cosmic Velocity (v1): 7.91 km/s Second Cosmic Velocity (v2): 11.19 km/s Mars: First Cosmic Velocity (v1): 3.55 km/s Second Cosmic Velocity (v2): 5.03 km/s Jupiter: First Cosmic Velocity (v1): 42.06 km/s Second Cosmic Velocity (v2): 59.54 km/s 2.2 \u2705 Problem 2 \u2013 Task 2: Mathematical Derivations and Key Influences \ud83d\udd39 1. First Cosmic Velocity ( \ud835\udc63 1 v 1 \u200b ) \u2013 Orbital Velocity Goal: Derive the velocity for a stable circular orbit. Derivation: For an object in circular orbit, gravitational force provides the centripetal force: \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f r 2 GMm \u200b = r mv 2 \u200b Simplify and solve for \ud835\udc63 v: \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 1 \u200b = r GM \u200b \u200b Influencing Parameters: \ud835\udc3a G: Universal constant (fixed) \ud835\udc40 M: Mass of the planet/star \ud835\udc5f r: Distance from the center of mass \ud83d\udd39 2. Second Cosmic Velocity ( \ud835\udc63 2 v 2 \u200b ) \u2013 Escape Velocity Goal: Minimum speed to break free from gravity with no further propulsion. Derivation (energy balance): Kinetic Energy = Gravitational Potential Energy Kinetic Energy=Gravitational Potential Energy 1 2 \ud835\udc5a \ud835\udc63 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f \u21d2 \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f 2 1 \u200b mv 2 = r GMm \u200b \u21d2v 2 \u200b = r 2GM \u200b \u200b Key Differences from \ud835\udc63 1 v 1 \u200b : Escape velocity is \u221a2 times the orbital velocity at the same radius: \ud835\udc63 2 = 2 \u22c5 \ud835\udc63 1 v 2 \u200b = 2 \u200b \u22c5v 1 \u200b \ud83d\udd39 3. Third Cosmic Velocity ( \ud835\udc63 3 v 3 \u200b ) \u2013 Escape Solar System This velocity depends on: Escape from Earth\u2019s gravity: \ud835\udc63 2 v 2 \u200b Speed to overcome Sun\u2019s gravity from Earth\u2019s orbit: \ud835\udc63 solar v solar \u200b Approximated as: \ud835\udc63 3 = \ud835\udc63 2 2 + \ud835\udc63 Earth orbit 2 v 3 \u200b = v 2 2 \u200b +v Earth orbit 2 \u200b \u200b Using: \ud835\udc63 2 \u2248 11.2 v 2 \u200b \u224811.2 km/s \ud835\udc63 Earth orbit \u2248 29.78 v Earth orbit \u200b \u224829.78 km/s \ud835\udc63 3 \u2248 ( 11.2 ) 2 + ( 29.78 ) 2 \u2248 32.7 km/s v 3 \u200b \u2248 (11.2) 2 +(29.78) 2 \u200b \u224832.7 km/s code import numpy as np Constants G = 6.67430e-11 # m^3 kg^-1 s^-2 M_sun = 1.989e30 # kg Orbital speed of Earth around Sun (for v3) v_earth_orbit = 29.78e3 # m/s Planet data: mass (kg), radius (m) planets = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6}, \"Mars\": {\"mass\": 6.417e23, \"radius\": 3.390e6}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7} } Compute and print cosmic velocities for name, data in planets.items(): M = data[\"mass\"] r = data[\"radius\"] v1 = np.sqrt(G * M / r) # First cosmic velocity v2 = np.sqrt(2 * G * M / r) # Second cosmic velocity # For Earth, compute v3 using its orbital speed if name == \"Earth\": v3 = np.sqrt(v2**2 + v_earth_orbit**2) else: v3 = None print(f\"\\n{name}\") print(f\"First Cosmic Velocity (v1): {v1/1000:.2f} km/s\") print(f\"Second Cosmic Velocity (v2): {v2/1000:.2f} km/s\") if v3: print(f\"Third Cosmic Velocity (v3): {v3/1000:.2f} km/s\") ouput Earth First Cosmic Velocity (v1): 7.91 km/s Second Cosmic Velocity (v2): 11.19 km/s Third Cosmic Velocity (v3): 31.81 km/s Mars First Cosmic Velocity (v1): 3.55 km/s Second Cosmic Velocity (v2): 5.03 km/s Jupiter First Cosmic Velocity (v1): 42.57 km/s Second Cosmic Velocity (v2): 60.20 km/s 2.3 Task 3 \u2013 Analyze Real-World Examples for Cosmic Velocities \ud83c\udfaf Goal: Calculate and visualize the first, second, and third cosmic velocities for Earth, Mars, and Jupiter \u2014 and understand what they mean in the context of space exploration. \ud83e\uddee Real Data Used: Planet Mass (kg) Radius (m) Earth 5.972 \u00d7 10\u00b2\u2074 6.371 \u00d7 10\u2076 Mars 6.417 \u00d7 10\u00b2\u00b3 3.390 \u00d7 10\u2076 Jupiter 1.898 \u00d7 10\u00b2\u2077 6.991 \u00d7 10\u2077 \ud83d\udd22 Results (in km/s): Planet v\u2081 (orbit) v\u2082 (escape) v\u2083 (escape Solar System) Earth ~7.91 ~11.19 ~42.1 Mars ~3.55 ~5.03 N/A Jupiter ~42.07 ~59.54 N/A v\u2081: Needed to stay in a circular orbit near the surface v\u2082: Minimum speed to escape the planet\u2019s gravity v\u2083: Only calculated for Earth \u2014 it\u2019s the speed to escape the Solar System","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"gravity 2.1.1 Problem 2 \u2013 Task 1: Define the First, Second, and Third Cosmic Velocities \ud83d\udccc Definitions and Physical Meaning First Cosmic Velocity ( \ud835\udc63 1 v 1 \u200b ) \u2014 Orbital Velocity The minimum horizontal speed needed for an object to enter stable circular orbit near the surface of a planet (without propulsion). \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 1 \u200b = r GM \u200b \u200b Second Cosmic Velocity ( \ud835\udc63 2 v 2 \u200b ) \u2014 Escape Velocity The minimum speed required to break free from a planet\u2019s gravitational field without further propulsion. \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f v 2 \u200b = r 2GM \u200b \u200b Third Cosmic Velocity ( \ud835\udc63 3 v 3 \u200b ) \u2014 Interstellar Escape Velocity The minimum speed needed to escape the gravitational pull of the Sun from Earth\u2019s orbit (i.e., to leave the solar system). \ud835\udc63 3 = \ud835\udc63 Earth orbit 2 + \ud835\udc63 2 2 v 3 \u200b = v Earth orbit 2 \u200b +v 2 2 \u200b \u200b Where: \ud835\udc63 Earth orbit \u2248 29.78 \u2009 km/s v Earth orbit \u200b \u224829.78km/s (orbital velocity of Earth around Sun), \ud835\udc63 2 \u2248 11.2 \u2009 km/s v 2 \u200b \u224811.2km/s (escape velocity from E code import numpy as np","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#gravitational-constant","text":"G = 6.67430e-11 # m^3 kg^-1 s^-2","title":"Gravitational constant"},{"location":"1%20Physics/2%20Gravity/Problem_2/#define-planets-with-mass-kg-and-radius-m","text":"planets = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6}, \"Mars\": {\"mass\": 6.417e23, \"radius\": 3.390e6}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7} }","title":"Define planets with mass (kg) and radius (m)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#function-to-compute-v1-and-v2","text":"def compute_cosmic_velocities(mass, radius): v1 = np.sqrt(G * mass / radius) # First cosmic velocity v2 = np.sqrt(2 * G * mass / radius) # Second cosmic velocity return v1, v2","title":"Function to compute v1 and v2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#calculate-and-print","text":"for planet, data in planets.items(): v1, v2 = compute_cosmic_velocities(data[\"mass\"], data[\"radius\"]) print(f\"{planet}:\\n First Cosmic Velocity (v1): {v1/1000:.2f} km/s\\n Second Cosmic Velocity (v2): {v2/1000:.2f} km/s\\n\") output Earth: First Cosmic Velocity (v1): 7.91 km/s Second Cosmic Velocity (v2): 11.19 km/s Mars: First Cosmic Velocity (v1): 3.55 km/s Second Cosmic Velocity (v2): 5.03 km/s Jupiter: First Cosmic Velocity (v1): 42.06 km/s Second Cosmic Velocity (v2): 59.54 km/s 2.2 \u2705 Problem 2 \u2013 Task 2: Mathematical Derivations and Key Influences \ud83d\udd39 1. First Cosmic Velocity ( \ud835\udc63 1 v 1 \u200b ) \u2013 Orbital Velocity Goal: Derive the velocity for a stable circular orbit. Derivation: For an object in circular orbit, gravitational force provides the centripetal force: \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f 2 = \ud835\udc5a \ud835\udc63 2 \ud835\udc5f r 2 GMm \u200b = r mv 2 \u200b Simplify and solve for \ud835\udc63 v: \ud835\udc63 1 = \ud835\udc3a \ud835\udc40 \ud835\udc5f v 1 \u200b = r GM \u200b \u200b Influencing Parameters: \ud835\udc3a G: Universal constant (fixed) \ud835\udc40 M: Mass of the planet/star \ud835\udc5f r: Distance from the center of mass \ud83d\udd39 2. Second Cosmic Velocity ( \ud835\udc63 2 v 2 \u200b ) \u2013 Escape Velocity Goal: Minimum speed to break free from gravity with no further propulsion. Derivation (energy balance): Kinetic Energy = Gravitational Potential Energy Kinetic Energy=Gravitational Potential Energy 1 2 \ud835\udc5a \ud835\udc63 2 = \ud835\udc3a \ud835\udc40 \ud835\udc5a \ud835\udc5f \u21d2 \ud835\udc63 2 = 2 \ud835\udc3a \ud835\udc40 \ud835\udc5f 2 1 \u200b mv 2 = r GMm \u200b \u21d2v 2 \u200b = r 2GM \u200b \u200b Key Differences from \ud835\udc63 1 v 1 \u200b : Escape velocity is \u221a2 times the orbital velocity at the same radius: \ud835\udc63 2 = 2 \u22c5 \ud835\udc63 1 v 2 \u200b = 2 \u200b \u22c5v 1 \u200b \ud83d\udd39 3. Third Cosmic Velocity ( \ud835\udc63 3 v 3 \u200b ) \u2013 Escape Solar System This velocity depends on: Escape from Earth\u2019s gravity: \ud835\udc63 2 v 2 \u200b Speed to overcome Sun\u2019s gravity from Earth\u2019s orbit: \ud835\udc63 solar v solar \u200b Approximated as: \ud835\udc63 3 = \ud835\udc63 2 2 + \ud835\udc63 Earth orbit 2 v 3 \u200b = v 2 2 \u200b +v Earth orbit 2 \u200b \u200b Using: \ud835\udc63 2 \u2248 11.2 v 2 \u200b \u224811.2 km/s \ud835\udc63 Earth orbit \u2248 29.78 v Earth orbit \u200b \u224829.78 km/s \ud835\udc63 3 \u2248 ( 11.2 ) 2 + ( 29.78 ) 2 \u2248 32.7 km/s v 3 \u200b \u2248 (11.2) 2 +(29.78) 2 \u200b \u224832.7 km/s code import numpy as np","title":"Calculate and print"},{"location":"1%20Physics/2%20Gravity/Problem_2/#constants","text":"G = 6.67430e-11 # m^3 kg^-1 s^-2 M_sun = 1.989e30 # kg","title":"Constants"},{"location":"1%20Physics/2%20Gravity/Problem_2/#orbital-speed-of-earth-around-sun-for-v3","text":"v_earth_orbit = 29.78e3 # m/s","title":"Orbital speed of Earth around Sun (for v3)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#planet-data-mass-kg-radius-m","text":"planets = { \"Earth\": {\"mass\": 5.972e24, \"radius\": 6.371e6}, \"Mars\": {\"mass\": 6.417e23, \"radius\": 3.390e6}, \"Jupiter\": {\"mass\": 1.898e27, \"radius\": 6.991e7} }","title":"Planet data: mass (kg), radius (m)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#compute-and-print-cosmic-velocities","text":"for name, data in planets.items(): M = data[\"mass\"] r = data[\"radius\"] v1 = np.sqrt(G * M / r) # First cosmic velocity v2 = np.sqrt(2 * G * M / r) # Second cosmic velocity # For Earth, compute v3 using its orbital speed if name == \"Earth\": v3 = np.sqrt(v2**2 + v_earth_orbit**2) else: v3 = None print(f\"\\n{name}\") print(f\"First Cosmic Velocity (v1): {v1/1000:.2f} km/s\") print(f\"Second Cosmic Velocity (v2): {v2/1000:.2f} km/s\") if v3: print(f\"Third Cosmic Velocity (v3): {v3/1000:.2f} km/s\") ouput Earth First Cosmic Velocity (v1): 7.91 km/s Second Cosmic Velocity (v2): 11.19 km/s Third Cosmic Velocity (v3): 31.81 km/s Mars First Cosmic Velocity (v1): 3.55 km/s Second Cosmic Velocity (v2): 5.03 km/s Jupiter First Cosmic Velocity (v1): 42.57 km/s Second Cosmic Velocity (v2): 60.20 km/s 2.3 Task 3 \u2013 Analyze Real-World Examples for Cosmic Velocities \ud83c\udfaf Goal: Calculate and visualize the first, second, and third cosmic velocities for Earth, Mars, and Jupiter \u2014 and understand what they mean in the context of space exploration. \ud83e\uddee Real Data Used: Planet Mass (kg) Radius (m) Earth 5.972 \u00d7 10\u00b2\u2074 6.371 \u00d7 10\u2076 Mars 6.417 \u00d7 10\u00b2\u00b3 3.390 \u00d7 10\u2076 Jupiter 1.898 \u00d7 10\u00b2\u2077 6.991 \u00d7 10\u2077 \ud83d\udd22 Results (in km/s): Planet v\u2081 (orbit) v\u2082 (escape) v\u2083 (escape Solar System) Earth ~7.91 ~11.19 ~42.1 Mars ~3.55 ~5.03 N/A Jupiter ~42.07 ~59.54 N/A v\u2081: Needed to stay in a circular orbit near the surface v\u2082: Minimum speed to escape the planet\u2019s gravity v\u2083: Only calculated for Earth \u2014 it\u2019s the speed to escape the Solar System","title":"Compute and print cosmic velocities"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"}]}